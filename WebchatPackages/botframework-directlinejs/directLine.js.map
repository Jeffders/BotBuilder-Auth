{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 9cb509f81e43f97f2f7e","webpack:///./src/directLine.ts","webpack:///./~/rxjs/src/BehaviorSubject.ts","webpack:///./~/rxjs/src/Subject.ts","webpack:///./~/rxjs/src/Observable.ts","webpack:///./~/rxjs/src/util/root.ts","webpack:///./~/rxjs/src/util/toSubscriber.ts","webpack:///./~/rxjs/src/Subscriber.ts","webpack:///./~/rxjs/src/util/isFunction.ts","webpack:///./~/rxjs/src/Subscription.ts","webpack:///./~/rxjs/src/util/isArray.ts","webpack:///./~/rxjs/src/util/isObject.ts","webpack:///./~/rxjs/src/util/tryCatch.ts","webpack:///./~/rxjs/src/util/errorObject.ts","webpack:///./~/rxjs/src/util/UnsubscriptionError.ts","webpack:///./~/rxjs/src/Observer.ts","webpack:///./~/rxjs/src/symbol/rxSubscriber.ts","webpack:///./~/rxjs/src/symbol/observable.ts","webpack:///./~/rxjs/src/util/ObjectUnsubscribedError.ts","webpack:///./~/rxjs/src/SubjectSubscription.ts","webpack:///./~/rxjs/src/add/operator/catch.ts","webpack:///./~/rxjs/src/operator/catch.ts","webpack:///./~/rxjs/src/OuterSubscriber.ts","webpack:///./~/rxjs/src/util/subscribeToResult.ts","webpack:///./~/rxjs/src/util/isArrayLike.ts","webpack:///./~/rxjs/src/util/isPromise.ts","webpack:///./~/rxjs/src/symbol/iterator.ts","webpack:///./~/rxjs/src/InnerSubscriber.ts","webpack:///./~/rxjs/src/add/operator/combineLatest.ts","webpack:///./~/rxjs/src/operator/combineLatest.ts","webpack:///./~/rxjs/src/observable/ArrayObservable.ts","webpack:///./~/rxjs/src/observable/ScalarObservable.ts","webpack:///./~/rxjs/src/observable/EmptyObservable.ts","webpack:///./~/rxjs/src/util/isScheduler.ts","webpack:///./~/rxjs/src/add/operator/count.ts","webpack:///./~/rxjs/src/operator/count.ts","webpack:///./~/rxjs/src/add/operator/delay.ts","webpack:///./~/rxjs/src/operator/delay.ts","webpack:///./~/rxjs/src/scheduler/async.ts","webpack:///./~/rxjs/src/scheduler/AsyncAction.ts","webpack:///./~/rxjs/src/scheduler/Action.ts","webpack:///./~/rxjs/src/scheduler/AsyncScheduler.ts","webpack:///./~/rxjs/src/Scheduler.ts","webpack:///./~/rxjs/src/util/isDate.ts","webpack:///./~/rxjs/src/Notification.ts","webpack:///./~/rxjs/src/add/operator/do.ts","webpack:///./~/rxjs/src/operator/do.ts","webpack:///./~/rxjs/src/add/operator/filter.ts","webpack:///./~/rxjs/src/operator/filter.ts","webpack:///./~/rxjs/src/add/operator/map.ts","webpack:///./~/rxjs/src/operator/map.ts","webpack:///./~/rxjs/src/add/operator/mergeMap.ts","webpack:///./~/rxjs/src/operator/mergeMap.ts","webpack:///./~/rxjs/src/add/operator/retryWhen.ts","webpack:///./~/rxjs/src/operator/retryWhen.ts","webpack:///./~/rxjs/src/add/operator/share.ts","webpack:///./~/rxjs/src/operator/share.ts","webpack:///./~/rxjs/src/operator/multicast.ts","webpack:///./~/rxjs/src/observable/ConnectableObservable.ts","webpack:///./~/rxjs/src/add/operator/take.ts","webpack:///./~/rxjs/src/operator/take.ts","webpack:///./~/rxjs/src/util/ArgumentOutOfRangeError.ts","webpack:///./~/rxjs/src/add/observable/dom/ajax.ts","webpack:///./~/rxjs/src/observable/dom/ajax.ts","webpack:///./~/rxjs/src/observable/dom/AjaxObservable.ts","webpack:///./~/rxjs/src/add/observable/empty.ts","webpack:///./~/rxjs/src/observable/empty.ts","webpack:///./~/rxjs/src/add/observable/from.ts","webpack:///./~/rxjs/src/observable/from.ts","webpack:///./~/rxjs/src/observable/FromObservable.ts","webpack:///./~/rxjs/src/observable/PromiseObservable.ts","webpack:///./~/rxjs/src/observable/IteratorObservable.ts","webpack:///./~/rxjs/src/observable/ArrayLikeObservable.ts","webpack:///./~/rxjs/src/operator/observeOn.ts","webpack:///./~/rxjs/src/add/observable/interval.ts","webpack:///./~/rxjs/src/observable/interval.ts","webpack:///./~/rxjs/src/observable/IntervalObservable.ts","webpack:///./~/rxjs/src/util/isNumeric.ts","webpack:///./~/rxjs/src/add/observable/of.ts","webpack:///./~/rxjs/src/observable/of.ts","webpack:///./~/rxjs/src/add/observable/throw.ts","webpack:///./~/rxjs/src/observable/throw.ts","webpack:///./~/rxjs/src/observable/ErrorObservable.ts"],"names":[],"mappings":"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","file":"./directLine.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DirectLine\"] = factory();\n\telse\n\t\troot[\"DirectLine\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9cb509f81e43f97f2f7e","// In order to keep file size down, only import the parts of rxjs that we use\n\nimport { AjaxResponse, AjaxRequest } from 'rxjs/observable/dom/AjaxObservable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscriber } from 'rxjs/Subscriber';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/combineLatest';\nimport 'rxjs/add/operator/count';\nimport 'rxjs/add/operator/delay';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/retryWhen';\nimport 'rxjs/add/operator/share';\nimport 'rxjs/add/operator/take';\n\nimport 'rxjs/add/observable/dom/ajax';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/observable/interval';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/throw';\n\n// Direct Line 3.0 types\n\nexport interface Conversation {\n    conversationId: string,\n    token: string,\n    eTag?: string,\n    streamUrl?: string,\n    referenceGrammarId?: string\n}\n\nexport type MediaType = \"image/png\" | \"image/jpg\" | \"image/jpeg\" | \"image/gif\" | \"image/svg+xml\" | \"audio/mpeg\" | \"audio/mp4\" | \"video/mp4\";\n\nexport interface Media {\n    contentType: MediaType,\n    contentUrl: string,\n    name?: string,\n    thumbnailUrl?: string\n}\n\nexport interface UnknownMedia{\n    contentType: string,\n    contentUrl: string,\n    name?: string,\n    thumbnailUrl?: string    \n}\n\nexport type CardActionTypes = \"openUrl\" | \"imBack\" | \"postBack\" | \"playAudio\" | \"playVideo\" | \"showImage\" | \"downloadFile\" | \"signin\" | \"call\";\n\nexport interface CardAction {\n    type: CardActionTypes,\n    title: string,\n    value: any,\n    image?: string\n}\n\nexport interface CardImage {\n    alt?: string,\n    url: string,\n    tap?: CardAction\n}\n\nexport interface HeroCard {\n    contentType: \"application/vnd.microsoft.card.hero\",\n    content: {\n        title?: string,\n        subtitle?: string,\n        text?: string,\n        images?: CardImage[],\n        buttons?: CardAction[],\n        tap?: CardAction\n    }\n}\n\nexport interface Thumbnail {\n    contentType: \"application/vnd.microsoft.card.thumbnail\",\n    content: {\n        title?: string,\n        subtitle?: string,\n        text?: string,\n        images?: CardImage[],\n        buttons?: CardAction[],\n        tap?: CardAction\n    }\n}\n\nexport interface Signin {\n    contentType: \"application/vnd.microsoft.card.signin\",\n    content: {\n        text?: string,\n        buttons?: CardAction[]\n    }\n}\n\nexport interface OAuth {\n    contentType: \"application/vnd.microsoft.card.oauth\",\n    content: {\n        text?: string,\n        connectionname: string,\n        buttons?: CardAction[]\n    }\n}\n\nexport interface ReceiptItem {\n    title?: string,\n    subtitle?: string,\n    text?: string,\n    image?: CardImage,\n    price?: string,\n    quantity?: string,\n    tap?: CardAction\n}\n\nexport interface Receipt {\n    contentType: \"application/vnd.microsoft.card.receipt\",\n    content: {\n        title?: string,\n        facts?: { key: string, value: string }[],\n        items?: ReceiptItem[],\n        tap?: CardAction,\n        tax?: string,\n        vat?: string,\n        total?: string,\n        buttons?: CardAction[]\n    }\n}\n\n// Deprecated format for Skype channels. For testing legacy bots in Emulator only.\nexport interface FlexCard {\n    contentType: \"application/vnd.microsoft.card.flex\",\n    content: {\n        title?: string,\n        subtitle?: string,\n        text?: string,\n        images?: CardImage[],\n        buttons?: CardAction[],\n        aspect?: string\n    }\n}\n\nexport interface AudioCard {\n    contentType: \"application/vnd.microsoft.card.audio\",\n    content: {\n        title?: string,\n        subtitle?: string,\n        text?: string,\n        media?: { url: string, profile?: string }[],\n        buttons?: CardAction[],\n        autoloop?: boolean,\n        autostart?: boolean\n    }\n}\n\nexport interface VideoCard {\n    contentType: \"application/vnd.microsoft.card.video\",\n    content: {\n        title?: string,\n        subtitle?: string,\n        text?: string,\n        media?: { url: string, profile?: string }[],\n        buttons?: CardAction[],\n        image?: { url: string, alt?: string },\n        autoloop?: boolean,\n        autostart?: boolean\n    }\n}\n\nexport interface AdaptiveCard {\n    contentType: \"application/vnd.microsoft.card.adaptive\",\n    content: any;\n}\n\nexport interface AnimationCard {\n    contentType: \"application/vnd.microsoft.card.animation\",\n    content: {\n        title?: string,\n        subtitle?: string,\n        text?: string,\n        media?: { url: string, profile?: string }[],\n        buttons?: CardAction[],\n        image?: { url: string, alt?: string },\n        autoloop?: boolean,\n        autostart?: boolean\n    }\n}\n\nexport type KnownMedia = Media | HeroCard | Thumbnail | Signin | OAuth | Receipt | AudioCard | VideoCard | AnimationCard | FlexCard | AdaptiveCard;\nexport type Attachment = KnownMedia | UnknownMedia;\n\nexport interface User {\n    id: string,\n    name?: string,\n    iconUrl?: string\n}\n\nexport interface IActivity {\n    type: string,\n    channelData?: any,\n    channelId?: string,\n    conversation?: { id: string },\n    eTag?: string,\n    from: User,\n    id?: string,\n    timestamp?: string\n}\n\nexport type AttachmentLayout = \"list\" | \"carousel\";\n\nexport interface Message extends IActivity {\n    type: \"message\",\n    text?: string,\n    locale?: string,\n    textFormat?: \"plain\" | \"markdown\" | \"xml\",\n    attachmentLayout?: AttachmentLayout,\n    attachments?: Attachment[],\n    entities?: any[],\n    suggestedActions?: { actions: CardAction[], to?: string[] },\n    speak?: string,\n    inputHint?: string,\n    value?: object\n}\n\nexport interface Typing extends IActivity {\n    type: \"typing\"\n}\n\nexport interface EventActivity extends IActivity {\n    type: \"event\",\n    name: string,\n    value: any\n}\n\nexport type Activity = Message | Typing | EventActivity;\n\ninterface ActivityGroup {\n    activities: Activity[],\n    watermark: string\n}\n\n// These types are specific to this client library, not to Direct Line 3.0\n\nexport enum ConnectionStatus {\n    Uninitialized,              // the status when the DirectLine object is first created/constructed\n    Connecting,                 // currently trying to connect to the conversation\n    Online,                     // successfully connected to the converstaion. Connection is healthy so far as we know.\n    ExpiredToken,               // last operation errored out with an expired token. Possibly waiting for someone to supply a new one.\n    FailedToConnect,            // the initial attempt to connect to the conversation failed. No recovery possible.\n    Ended                       // the bot ended the conversation\n}\n\nexport interface DirectLineOptions {\n    secret?: string,\n    token?: string,\n    conversationId?: string,\n    watermark?: string,\n    domain?: string,\n    webSocket?: boolean,\n    pollingInterval?: number,\n    streamUrl?: string\n}\n\nconst lifetimeRefreshToken = 30 * 60 * 1000;\nconst intervalRefreshToken = lifetimeRefreshToken / 2;\nconst timeout = 20 * 1000;\nconst retries = (lifetimeRefreshToken - intervalRefreshToken) / timeout;\n\nconst errorExpiredToken = new Error(\"expired token\");\nconst errorConversationEnded = new Error(\"conversation ended\");\nconst errorFailedToConnect = new Error(\"failed to connect\");\n\nconst konsole = {\n    log: (message?: any, ... optionalParams: any[]) => {\n        if (typeof(window) !== 'undefined' && window[\"botchatDebug\"] && message)\n            console.log(message, ... optionalParams);\n    }\n}\n\nexport interface IBotConnection {\n    connectionStatus$: BehaviorSubject<ConnectionStatus>,\n    activity$: Observable<Activity>,\n    end(): void,\n    referenceGrammarId?: string,\n    postActivity(activity: Activity): Observable<string>,\n    // DELETE getWebchatToken(): Observable<string>,\n    getSessionId(): Observable<string>\n    // DELETE validateUrl(): string,\n    // DELETE webchatTokenValue(): string\n}\n\nexport class DirectLine implements IBotConnection {\n    public connectionStatus$ = new BehaviorSubject(ConnectionStatus.Uninitialized);\n    public activity$: Observable<Activity>;\n\n    private domain = \"https://directline.botframework.com/v3/directline\";\n    private webSocket;\n\n    private conversationId: string;\n    private secret: string;\n    private token: string;\n    // DELETE private webchatToken: string;\n    private watermark = '';\n    private streamUrl: string;\n    public referenceGrammarId: string;\n\n    private pollingInterval: number = 1000;\n\n    private tokenRefreshSubscription: Subscription;\n\n    constructor(options: DirectLineOptions) {\n        this.secret = options.secret;\n        this.token = options.secret || options.token;\n        this.webSocket = (options.webSocket === undefined ? true : options.webSocket) && typeof WebSocket !== 'undefined' && WebSocket !== undefined; \n\n        if (options.domain)\n            this.domain = options.domain;\n        if (options.conversationId) {\n            this.conversationId = options.conversationId;\n        }\n        if (options.watermark) {\n            if (this.webSocket) \n                console.warn(\"Watermark was ignored: it is not supported using websockets at the moment\");\n            else\n                this.watermark =  options.watermark;\n        }\n        if (options.streamUrl) {\n            if (options.token && options.conversationId) \n                this.streamUrl = options.streamUrl;\n            else\n                console.warn(\"streamUrl was ignored: you need to provide a token and a conversationid\");\n        }\n        if (options.pollingInterval !== undefined)\n            this.pollingInterval = options.pollingInterval;\n\n        this.activity$ = (this.webSocket\n            ? this.webSocketActivity$()\n            : this.pollingGetActivity$()\n        ).share();\n    }\n\n    // Every time we're about to make a Direct Line REST call, we call this first to see check the current connection status.\n    // Either throws an error (indicating an error state) or emits a null, indicating a (presumably) healthy connection\n    private checkConnection(once = false) {\n        let obs =  this.connectionStatus$\n        .flatMap(connectionStatus => {\n            if (connectionStatus === ConnectionStatus.Uninitialized) {\n                this.connectionStatus$.next(ConnectionStatus.Connecting);\n\n                //if token and streamUrl are defined it means reconnect has already been done. Skipping it.\n                if (this.token && this.streamUrl) {\n                    this.connectionStatus$.next(ConnectionStatus.Online);\n                    return Observable.of(connectionStatus);\n                } else {\n                    return this.startConversation().do(conversation => {\n                        this.conversationId = conversation.conversationId;\n                        this.token = this.secret || conversation.token;\n                        this.streamUrl = conversation.streamUrl;\n                        this.referenceGrammarId = conversation.referenceGrammarId;\n                        if (!this.secret)\n                            this.refreshTokenLoop();\n\n                        this.connectionStatus$.next(ConnectionStatus.Online);\n                    }, error => {\n                        this.connectionStatus$.next(ConnectionStatus.FailedToConnect);\n                    })\n                    .map(_ => connectionStatus);\n                }\n            }\n            else {\n                return Observable.of(connectionStatus);            \n            }\n        })\n        .filter(connectionStatus => connectionStatus != ConnectionStatus.Uninitialized && connectionStatus != ConnectionStatus.Connecting)\n        .flatMap(connectionStatus => {\n            switch (connectionStatus) {\n                case ConnectionStatus.Ended:\n                    return Observable.throw(errorConversationEnded);\n\n                case ConnectionStatus.FailedToConnect:\n                    return Observable.throw(errorFailedToConnect);\n\n                case ConnectionStatus.ExpiredToken:\n                    return Observable.throw(errorExpiredToken);\n\n                default:\n                    return Observable.of(null);\n            }\n        })\n\n        return once ? obs.take(1) : obs;\n    }\n\n    private expiredToken() {\n        const connectionStatus = this.connectionStatus$.getValue();\n        if (connectionStatus != ConnectionStatus.Ended && connectionStatus != ConnectionStatus.FailedToConnect)\n            this.connectionStatus$.next(ConnectionStatus.ExpiredToken);\n    }\n\n    private startConversation() {\n        //if conversationid is set here, it means we need to call the reconnect api, else it is a new conversation\n        const url = this.conversationId \n            ? `${this.domain}/conversations/${this.conversationId}?watermark=${this.watermark}` \n            : `${this.domain}/conversations`;\n        const method = this.conversationId ? \"GET\" : \"POST\";\n\n        return Observable.ajax({\n            method,\n            url,\n            timeout,\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Authorization\": `Bearer ${this.token}`\n            }\n        })\n//      .do(ajaxResponse => konsole.log(\"conversation ajaxResponse\", ajaxResponse.response))\n        .map(ajaxResponse => ajaxResponse.response as Conversation)\n        .retryWhen(error$ =>\n            // for now we deem 4xx and 5xx errors as unrecoverable\n            // for everything else (timeouts), retry for a while\n            error$.mergeMap(error => error.status >= 400 && error.status < 600\n                ? Observable.throw(error)\n                : Observable.of(error)\n            )\n            .delay(timeout)\n            .take(retries)\n        )\n    }\n\n    private refreshTokenLoop() {\n        this.tokenRefreshSubscription = Observable.interval(intervalRefreshToken)\n        .flatMap(_ => this.refreshToken())\n        .subscribe(token => {\n            konsole.log(\"refreshing token\", token, \"at\", new Date());\n            this.token = token;\n        });\n    }\n\n    private refreshToken() {\n        return this.checkConnection(true)\n        .flatMap(_ =>\n            Observable.ajax({\n                method: \"POST\",\n                url: `${this.domain}/tokens/refresh`,\n                timeout,\n                headers: {\n                    \"Authorization\": `Bearer ${this.token}`\n                }\n            })\n            .map(ajaxResponse => ajaxResponse.response.token as string)\n            .retryWhen(error$ => error$\n                .mergeMap(error => {\n                    if (error.status === 403) {\n                        // if the token is expired there's no reason to keep trying\n                        this.expiredToken();\n                        return Observable.throw(error);\n                    }\n                    return Observable.of(error);\n                })\n                .delay(timeout)\n                .take(retries)\n            )\n        )\n    }\n\n    public reconnect(conversation: Conversation) {\n        this.token = conversation.token;\n        this.streamUrl = conversation.streamUrl;\n        if (this.connectionStatus$.getValue() === ConnectionStatus.ExpiredToken)\n            this.connectionStatus$.next(ConnectionStatus.Online);\n    }\n\n    end() {\n        if (this.tokenRefreshSubscription)\n            this.tokenRefreshSubscription.unsubscribe();\n        this.connectionStatus$.next(ConnectionStatus.Ended);\n    }\n\n    /* DELETE\n    getWebchatToken(): Observable<string> {\n        // If we're not connected to the bot, get connected\n        // Will throw an error if we are not connected\n        console.log(\"getWebchatToken\");\n        return this.checkConnection(true)\n        .flatMap(_ =>\n            Observable.ajax({\n                method: \"GET\",\n                url: `${this.domain}/session/gettoken`, \n                withCredentials: true,\n                timeout,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${this.token}`\n                }\n            })\n            .map(ajaxResponse => {\n                console.log(\"getSessionId response: \" + ajaxResponse.response + \", \" + ajaxResponse.response.token);\n                this.webchatToken = ajaxResponse.response.token;\n                return ajaxResponse.response.token as string;\n            })\n            .catch(error => this.catchPostError(error))\n        )\n        .catch(error => this.catchExpiredToken(error));\n    }\n    */\n    \n    getSessionId(): Observable<string> {\n        // If we're not connected to the bot, get connected\n        // Will throw an error if we are not connected\n        konsole.log(\"getSessionId\");\n        return this.checkConnection(true)\n            .flatMap(_ =>\n                Observable.ajax({\n                    method: \"GET\",\n                    url: `${this.domain}/session/getsessionid`, \n                    withCredentials: true,\n                    timeout,\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Authorization\": `Bearer ${this.token}`\n                    }\n                })\n                .map(ajaxResponse => {\n                    konsole.log(\"getSessionId response: \" + ajaxResponse.response.sessionId);\n                    return ajaxResponse.response.sessionId as string;\n                })\n                .catch(error => this.catchPostError(error))\n            )\n            .catch(error => this.catchExpiredToken(error));\n    }\n\n    /* DELETE\n    webchatTokenValue(): string {\n        return this.webchatToken;\n    }\n\n    validateUrl(): string {\n        return `${this.domain}/session/validate`;\n    }\n    */\n\n    postActivity(activity: Activity) {\n        // Use postMessageWithAttachments for messages with attachments that are local files (e.g. an image to upload)\n        // Technically we could use it for *all* activities, but postActivity is much lighter weight\n        // So, since WebChat is partially a reference implementation of Direct Line, we implement both.\n        if (activity.type === \"message\" && activity.attachments && activity.attachments.length > 0)\n            return this.postMessageWithAttachments(activity);\n\n        // If we're not connected to the bot, get connected\n        // Will throw an error if we are not connected\n        konsole.log(\"postActivity\", activity);\n        return this.checkConnection(true)\n        .flatMap(_ =>\n            Observable.ajax({\n                method: \"POST\",\n                url: `${this.domain}/conversations/${this.conversationId}/activities`,\n                body: activity,\n                timeout,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${this.token}`\n                }\n            })\n            .map(ajaxResponse => ajaxResponse.response.id as string)\n            .catch(error => this.catchPostError(error))\n        )\n        .catch(error => this.catchExpiredToken(error));\n    }\n\n    private postMessageWithAttachments({ attachments, ... messageWithoutAttachments }: Message) {\n        let formData: FormData;\n\n        // If we're not connected to the bot, get connected\n        // Will throw an error if we are not connected\n        return this.checkConnection(true)\n        .flatMap(_ => {\n            // To send this message to DirectLine we need to deconstruct it into a \"template\" activity\n            // and one blob for each attachment.\n            formData = new FormData();\n            formData.append('activity', new Blob([JSON.stringify(messageWithoutAttachments)], { type: 'application/vnd.microsoft.activity' }));\n\n            return Observable.from(attachments || [])\n            .flatMap((media: Media) =>\n                Observable.ajax({\n                    method: \"GET\",\n                    url: media.contentUrl,\n                    responseType: 'arraybuffer'\n                })\n                .do(ajaxResponse =>\n                    formData.append('file', new Blob([ajaxResponse.response], { type: media.contentType }), media.name)\n                )\n            )\n            .count()\n        })\n        .flatMap(_ =>\n            Observable.ajax({\n                method: \"POST\",\n                url: `${this.domain}/conversations/${this.conversationId}/upload?userId=${messageWithoutAttachments.from.id}`,\n                body: formData,\n                timeout,\n                headers: {\n                    \"Authorization\": `Bearer ${this.token}`\n                }\n            })\n            .map(ajaxResponse => ajaxResponse.response.id as string)\n            .catch(error => this.catchPostError(error))\n        )\n        .catch(error => this.catchPostError(error));\n    }\n\n    private catchPostError(error: any) {\n        if (error.status === 403)\n            // token has expired (will fall through to return \"retry\")\n            this.expiredToken();\n        else if (error.status >= 400 && error.status < 500)\n            // more unrecoverable errors\n            return Observable.throw(error);\n        return Observable.of(\"retry\");\n    }\n\n    private catchExpiredToken(error: any) {\n        return error === errorExpiredToken\n        ? Observable.of(\"retry\")\n        : Observable.throw(error);\n    }\n\n    private pollingGetActivity$() {\n        return Observable.interval(this.pollingInterval)\n        .combineLatest(this.checkConnection())\n        .flatMap(_ =>\n            Observable.ajax({\n                method: \"GET\",\n                url: `${this.domain}/conversations/${this.conversationId}/activities?watermark=${this.watermark}`,\n                timeout,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Authorization\": `Bearer ${this.token}`\n                }\n            })\n            .catch(error => {\n                if (error.status === 403) {\n                    // This is slightly ugly. We want to update this.connectionStatus$ to ExpiredToken so that subsequent\n                    // calls to checkConnection will throw an error. But when we do so, it causes this.checkConnection()\n                    // to immediately throw an error, which is caught by the catch() below and transformed into an empty\n                    // object. Then next() returns, and we emit an empty object. Which means one 403 is causing\n                    // two empty objects to be emitted. Which is harmless but, again, slightly ugly.\n                    this.expiredToken();\n                }\n                return Observable.empty<AjaxResponse>();\n            })\n//          .do(ajaxResponse => konsole.log(\"getActivityGroup ajaxResponse\", ajaxResponse))\n            .map(ajaxResponse => ajaxResponse.response as ActivityGroup)\n            .flatMap(activityGroup => this.observableFromActivityGroup(activityGroup))\n        )\n        .catch(error => Observable.empty<Activity>());\n    }\n\n    private observableFromActivityGroup(activityGroup: ActivityGroup) {\n        if (activityGroup.watermark)\n            this.watermark = activityGroup.watermark;\n        return Observable.from(activityGroup.activities);\n    }\n\n    private webSocketActivity$(): Observable<Activity> {\n        return this.checkConnection()\n        .flatMap(_ =>\n            this.observableWebSocket<ActivityGroup>()\n            // WebSockets can be closed by the server or the browser. In the former case we need to\n            // retrieve a new streamUrl. In the latter case we could first retry with the current streamUrl,\n            // but it's simpler just to always fetch a new one.\n            .retryWhen(error$ => error$.mergeMap(error => this.reconnectToConversation()))\n        )\n        .flatMap(activityGroup => this.observableFromActivityGroup(activityGroup))\n    }\n\n    // Originally we used Observable.webSocket, but it's fairly opionated  and I ended up writing\n    // a lot of code to work around their implemention details. Since WebChat is meant to be a reference\n    // implementation, I decided roll the below, where the logic is more purposeful. - @billba\n    private observableWebSocket<T>() {\n        return Observable.create((subscriber: Subscriber<T>) => {\n            konsole.log(\"creating WebSocket\", this.streamUrl);\n            const ws = new WebSocket(this.streamUrl);\n            let sub: Subscription;\n\n            ws.onopen = open => {\n                konsole.log(\"WebSocket open\", open);\n                // Chrome is pretty bad at noticing when a WebSocket connection is broken.\n                // If we periodically ping the server with empty messages, it helps Chrome\n                // realize when connection breaks, and close the socket. We then throw an\n                // error, and that give us the opportunity to attempt to reconnect.\n                sub = Observable.interval(timeout).subscribe(_ => ws.send(\"\"));\n            }\n\n            ws.onclose = close => {\n                konsole.log(\"WebSocket close\", close);\n                if (sub) sub.unsubscribe();\n                subscriber.error(close);\n            }\n\n            ws.onmessage = message => message.data && subscriber.next(JSON.parse(message.data));\n\n            // This is the 'unsubscribe' method, which is called when this observable is disposed.\n            // When the WebSocket closes itself, we throw an error, and this function is eventually called.\n            // When the observable is closed first (e.g. when tearing down a WebChat instance) then\n            // we need to manually close the WebSocket.\n            return () => {\n                if (ws.readyState === 0 || ws.readyState === 1) ws.close();\n            }\n        }) as Observable<T>\n    }\n\n    private reconnectToConversation() {\n        return this.checkConnection(true)\n        .flatMap(_ =>\n            Observable.ajax({\n                method: \"GET\",\n                url: `${this.domain}/conversations/${this.conversationId}?watermark=${this.watermark}`,\n                timeout,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Authorization\": `Bearer ${this.token}`\n                }\n            })\n            .do(result => {\n                if (!this.secret)\n                    this.token = result.response.token;\n                this.streamUrl = result.response.streamUrl;\n            })\n            .map(_ => null)\n            .retryWhen(error$ => error$\n                .mergeMap(error => {\n                    if (error.status === 403) {\n                        // token has expired. We can't recover from this here, but the embedding\n                        // website might eventually call reconnect() with a new token and streamUrl.\n                        this.expiredToken();\n                    }\n                    return Observable.of(error);\n                })\n                .delay(timeout)\n                .take(retries)\n            )\n        )\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directLine.ts","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, ISubscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<ISubscription>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/BehaviorSubject.ts","import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription, TeardownLogic } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<T> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/Subject.ts","import { PartialObserver } from './Observer';\nimport { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, AnonymousSubscription, TeardownLogic } from './Subscription';\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { IfObservable } from './observable/IfObservable';\nimport { ErrorObservable } from './observable/ErrorObservable';\nimport { observable as Symbol_observable } from './symbol/observable';\n\nexport interface Subscribable<T> {\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): AnonymousSubscription;\n}\n\nexport type SubscribableOrPromise<T> = Subscribable<T> | PromiseLike<T>;\nexport type ObservableInput<T> = SubscribableOrPromise<T> | ArrayLike<T>;\n\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  public _isScalar: boolean = false;\n\n  protected source: Observable<any>;\n  protected operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is  called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  /**\n   * Registers handlers for handling emitted values, error and completions from the observable, and\n   *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n   * @method subscribe\n   * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n   * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled\n   * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   */\n  subscribe(): Subscription;\n  subscribe(observer: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(this._trySubscribe(sink));\n    }\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  }\n\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.syncErrorThrown = true;\n      sink.syncErrorValue = err;\n      sink.error(err);\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, PromiseCtor?: typeof Promise): Promise<void> {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  }\n\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words\n  static if: typeof IfObservable.create;\n  static throw: typeof ErrorObservable.create;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/Observable.ts","declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/util/root.ts","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { PartialObserver, empty as emptyObserver } from '../Observer';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/util/toSubscriber.ts","import { isFunction } from './util/isFunction';\nimport { Observer, PartialObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.destination = (<Subscriber<any>> destinationOrNext);\n            (<any> this.destination).add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  protected _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._error) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parentSubscriber.syncErrorValue = err;\n        _parentSubscriber.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  protected _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/Subscriber.ts","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/util/isFunction.ts","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/Subscription.ts","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/util/isArray.ts","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/util/isObject.ts","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/util/tryCatch.ts","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/util/errorObject.ts","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/util/UnsubscriptionError.ts","export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/Observer.ts","import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/symbol/rxSubscriber.ts","import { root } from '../util/root';\n\nexport function getSymbolObservable(context: any) {\n  let $$observable: any;\n  let Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n        $$observable = Symbol('observable');\n        Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexport const observable = getSymbolObservable(root);\n\n/**\n * @deprecated use observable instead\n */\nexport const $$observable = observable;\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/symbol/observable.ts","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    const err: any = super('object unsubscribed');\n    (<any> this).name = err.name = 'ObjectUnsubscribedError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/util/ObjectUnsubscribedError.ts","import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/SubjectSubscription.ts","\nimport { Observable } from '../../Observable';\nimport { _catch } from '../../operator/catch';\n\nObservable.prototype.catch = _catch;\nObservable.prototype._catch = _catch;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    catch: typeof _catch;\n    _catch: typeof _catch;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/add/operator/catch.ts","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nexport function _catch<T, R>(this: Observable<T>, selector: (err: any, caught: Observable<T>) => ObservableInput<R>): Observable<T | R> {\n  const operator = new CatchOperator(selector);\n  const caught = this.lift(operator);\n  return (operator.caught = caught);\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends OuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      this.add(subscribeToResult(this, result));\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/operator/catch.ts","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/OuterSubscriber.ts","import { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription {\n  let destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.closed) {\n    return null;\n  }\n\n  if (result instanceof Observable) {\n    if (result._isScalar) {\n      destination.next((<any>result).value);\n      destination.complete();\n      return null;\n    } else {\n      return result.subscribe(destination);\n    }\n  } else if (isArrayLike(result)) {\n    for (let i = 0, len = result.length; i < len && !destination.closed; i++) {\n      destination.next(result[i]);\n    }\n    if (!destination.closed) {\n      destination.complete();\n    }\n  } else if (isPromise(result)) {\n    result.then(\n      (value) => {\n        if (!destination.closed) {\n          destination.next(<any>value);\n          destination.complete();\n        }\n      },\n      (err: any) => destination.error(err)\n    )\n    .then(null, (err: any) => {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root.setTimeout(() => { throw err; });\n    });\n    return destination;\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    const iterator = <any>result[Symbol_iterator]();\n    do {\n      let item = iterator.next();\n      if (item.done) {\n        destination.complete();\n        break;\n      }\n      destination.next(item.value);\n      if (destination.closed) {\n        break;\n      }\n    } while (true);\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    const obs = result[Symbol_observable]();\n    if (typeof obs.subscribe !== 'function') {\n      destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n    } else {\n      return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    destination.error(new TypeError(msg));\n  }\n  return null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/util/subscribeToResult.ts","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number');\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/util/isArrayLike.ts","export function isPromise<T>(value: any | Promise<T>): value is Promise<T> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/util/isPromise.ts","import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const iterator = symbolIteratorPonyfill(root);\n\n/**\n * @deprecated use iterator instead\n */\nexport const $$iterator = iterator;\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/symbol/iterator.ts","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index: number = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, private outerValue: T, private outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/InnerSubscriber.ts","\nimport { Observable } from '../../Observable';\nimport { combineLatest } from '../../operator/combineLatest';\n\nObservable.prototype.combineLatest = combineLatest;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    combineLatest: typeof combineLatest;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/add/operator/combineLatest.ts","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nconst none = {};\n\n/* tslint:disable:max-line-length */\nexport function combineLatest<T, R>(this: Observable<T>, project: (v1: T) => R): Observable<R>;\nexport function combineLatest<T, T2, R>(this: Observable<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function combineLatest<T, T2, T3, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, T5, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R> ;\nexport function combineLatest<T, T2>(this: Observable<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function combineLatest<T, T2, T3>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]> ;\nexport function combineLatest<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function combineLatest<T, R>(this: Observable<T>, array: ObservableInput<T>[]): Observable<Array<T>>;\nexport function combineLatest<T, TOther, R>(this: Observable<T>, array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nexport function combineLatest<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): Observable<R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = (<any>observables[0]).slice();\n  }\n\n  observables.unshift(this);\n\n  return this.lift.call(new ArrayObservable(observables), new CombineLatestOperator(project));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private project?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private project?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(none);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === none ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.project) {\n        this._tryProject(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryProject(values: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/operator/combineLatest.ts","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayObservable<T> extends Observable<T> {\n\n  static create<T>(array: T[], scheduler?: IScheduler): Observable<T> {\n    return new ArrayObservable(array, scheduler);\n  }\n\n  static of<T>(item1: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(...array: Array<T | IScheduler>): Observable<T>;\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` IScheduler, which means the `next`\n   * notifications are sent synchronously, although with a different IScheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n  static of<T>(...array: Array<T | IScheduler>): Observable<T> {\n    let scheduler = <IScheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len > 1) {\n      return new ArrayObservable<T>(<any>array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable<T>(<any>array[0], scheduler);\n    } else {\n      return new EmptyObservable<T>(scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n\n    const { array, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  value: any;\n\n  constructor(private array: T[], private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const array = this.array;\n    const count = array.length;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array, index, count, subscriber\n      });\n    } else {\n      for (let i = 0; i < count && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/observable/ArrayObservable.ts","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: IScheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: IScheduler) {\n    super();\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/observable/ScalarObservable.ts","import { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following to the console:\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\n   * // x will occur every 1000ms\n   * // if x % 2 is equal to 1 print abc\n   * // if x % 2 is not equal to 1 nothing will be output\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: IScheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: IScheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/observable/EmptyObservable.ts","import { Scheduler } from '../Scheduler';\nexport function isScheduler(value: any): value is Scheduler {\n  return value && typeof (<any>value).schedule === 'function';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/util/isScheduler.ts","\nimport { Observable } from '../../Observable';\nimport { count } from '../../operator/count';\n\nObservable.prototype.count = count;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    count: typeof count;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/add/operator/count.ts","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count<T>(this: Observable<T>, predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<number> {\n  return this.lift(new CountOperator(predicate, this));\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/operator/count.ts","\nimport { Observable } from '../../Observable';\nimport { delay } from '../../operator/delay';\n\nObservable.prototype.delay = delay;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    delay: typeof delay;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/add/operator/delay.ts","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Action } from '../scheduler/Action';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(this: Observable<T>, delay: number|Date,\n                         scheduler: IScheduler = async): Observable<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return this.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: IScheduler;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: Action<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: IScheduler): void {\n    this.active = true;\n    this.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/operator/delay.ts","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\nexport const async = new AsyncScheduler(AsyncAction);\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/scheduler/async.ts","import { root } from '../util/root';\nimport { Action } from './Action';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: AsyncAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n     }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    return root.clearInterval(id) && undefined || undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  protected _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.delay = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/scheduler/AsyncAction.ts","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: Action<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent Scheduler for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/scheduler/Action.ts","import { Scheduler } from '../Scheduler';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   */\n  public scheduled: any = undefined;\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/scheduler/AsyncScheduler.ts","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\n\nexport interface IScheduler {\n  now(): number;\n  schedule<T>(work: (this: Action<T>, state?: T) => void, delay?: number, state?: T): Subscription;\n}\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport class Scheduler implements IScheduler {\n\n  public static now: () => number = Date.now ? Date.now : () => +new Date();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: Action<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/Scheduler.ts","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/util/isDate.ts","import { PartialObserver } from './Observer';\nimport { Observable } from './Observable';\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: string, public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return Observable.of(this.value);\n      case 'E':\n        return Observable.throw(this.error);\n      case 'C':\n        return Observable.empty<T>();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return this.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   */\n  static createComplete(): Notification<any> {\n    return this.completeNotification;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/Notification.ts","\nimport { Observable } from '../../Observable';\nimport { _do } from '../../operator/do';\n\nObservable.prototype.do = _do;\nObservable.prototype._do = _do;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    do: typeof _do;\n    _do: typeof _do;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/add/operator/do.ts","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\n\n/* tslint:disable:max-line-length */\nexport function _do<T>(this: Observable<T>, next: (x: T) => void, error?: (e: any) => void, complete?: () => void): Observable<T>;\nexport function _do<T>(this: Observable<T>, observer: PartialObserver<T>): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nexport function _do<T>(this: Observable<T>, nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): Observable<T> {\n  return this.lift(new DoOperator(nextOrObserver, error, complete));\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DoSubscriber<T> extends Subscriber<T> {\n\n  private safeSubscriber: Subscriber<T>;\n\n  constructor(destination: Subscriber<T>,\n              nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              error?: (e: any) => void,\n              complete?: () => void) {\n    super(destination);\n\n    const safeSubscriber = new Subscriber<T>(nextOrObserver, error, complete);\n    safeSubscriber.syncErrorThrowable = true;\n    this.add(safeSubscriber);\n    this.safeSubscriber = safeSubscriber;\n  }\n\n  protected _next(value: T): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.next(value);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.next(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.error(err);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.complete();\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/operator/do.ts","\nimport { Observable } from '../../Observable';\nimport { filter } from '../../operator/filter';\n\nObservable.prototype.filter = filter;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    filter: typeof filter;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/add/operator/filter.ts","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(this: Observable<T>,\n                                       predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): Observable<S>;\nexport function filter<T>(this: Observable<T>,\n                          predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(this: Observable<T>, predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): Observable<T> {\n  return this.lift(new FilterOperator(predicate, thisArg));\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n    this.predicate = predicate;\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/operator/filter.ts","\nimport { Observable } from '../../Observable';\nimport { map } from '../../operator/map';\n\nObservable.prototype.map = map;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    map: typeof map;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/add/operator/map.ts","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(this: Observable<T>, project: (value: T, index: number) => R, thisArg?: any): Observable<R> {\n  if (typeof project !== 'function') {\n    throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n  }\n  return this.lift(new MapOperator(project, thisArg));\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/operator/map.ts","\nimport { Observable } from '../../Observable';\nimport { mergeMap } from '../../operator/mergeMap';\n\nObservable.prototype.mergeMap = <any>mergeMap;\nObservable.prototype.flatMap = <any>mergeMap;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    flatMap: typeof mergeMap;\n    mergeMap: typeof mergeMap;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/add/operator/mergeMap.ts","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): Observable<R>;\nexport function mergeMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): Observable<I | R> {\n  if (typeof resultSelector === 'number') {\n    concurrent = <number>resultSelector;\n    resultSelector = null;\n  }\n  return this.lift(new MergeMapOperator(project, <any>resultSelector, concurrent));\n}\n\nexport class MergeMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<I>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.resultSelector, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<I>, value: T, index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _notifyResultSelector(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/operator/mergeMap.ts","\nimport { Observable } from '../../Observable';\nimport { retryWhen } from '../../operator/retryWhen';\n\nObservable.prototype.retryWhen = retryWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    retryWhen: typeof retryWhen;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/add/operator/retryWhen.ts","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(this: Observable<T>, notifier: (errors: Observable<any>) => Observable<any>): Observable<T> {\n  return this.lift(new RetryWhenOperator(notifier, this));\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              protected source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private errors: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        retries = tryCatch(this.notifier)(errors);\n        if (retries === errorObject) {\n          return super.error(errorObject.e);\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors.next(err);\n    }\n  }\n\n  protected _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { errors, retries, retriesSubscription } = this;\n    this.errors = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n\n    this._unsubscribeAndRecycle();\n\n    this.errors = errors;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n\n    this.source.subscribe(this);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/operator/retryWhen.ts","\nimport { Observable } from '../../Observable';\nimport { share } from '../../operator/share';\n\nObservable.prototype.share = share;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    share: typeof share;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/add/operator/share.ts","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { Subject } from '../Subject';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .publish().refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(this: Observable<T>): Observable<T> {\n  return multicast.call(this, shareSubjectFactory).refCount();\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/operator/share.ts","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(this: Observable<T>, subjectOrSubjectFactory: factoryOrValue<Subject<T>>): ConnectableObservable<T>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: selector<T>): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T>(this: Observable<T>, subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                             selector?: (source: Observable<T>) => Observable<T>): Observable<T> | ConnectableObservable<T> {\n  let subjectFactory: () => Subject<T>;\n  if (typeof subjectOrSubjectFactory === 'function') {\n    subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n  } else {\n    subjectFactory = function subjectFactory() {\n      return <Subject<T>>subjectOrSubjectFactory;\n    };\n  }\n\n  if (typeof selector === 'function') {\n    return this.lift(new MulticastOperator(subjectFactory, selector));\n  }\n\n  const connectable: any = Object.create(this, connectableObservableDescriptor);\n  connectable.source = this;\n  connectable.subjectFactory = subjectFactory;\n\n  return <ConnectableObservable<T>> connectable;\n}\n\nexport type factoryOrValue<T> = T | (() => T);\nexport type selector<T> = (source: Observable<T>) => Observable<T>;\n\nexport class MulticastOperator<T> implements Operator<T, T> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/operator/multicast.ts","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  _isComplete = false;\n\n  constructor(protected source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return this.lift(new RefCountOperator<T>(this));\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/observable/ConnectableObservable.ts","\nimport { Observable } from '../../Observable';\nimport { take } from '../../operator/take';\n\nObservable.prototype.take = take;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    take: typeof take;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/add/operator/take.ts","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(this: Observable<T>, count: number): Observable<T> {\n  if (count === 0) {\n    return new EmptyObservable<T>();\n  } else {\n    return this.lift(new TakeOperator(count));\n  }\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/operator/take.ts","/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n  constructor() {\n    const err: any = super('argument out of range');\n    (<any> this).name = err.name = 'ArgumentOutOfRangeError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/util/ArgumentOutOfRangeError.ts","import { Observable } from '../../../Observable';\nimport { ajax as staticAjax } from '../../../observable/dom/ajax';\nimport { AjaxCreationMethod } from '../../../observable/dom/AjaxObservable';\n\nObservable.ajax = staticAjax;\n\ndeclare module '../../../Observable' {\n  namespace Observable {\n    export let ajax: AjaxCreationMethod;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/add/observable/dom/ajax.ts","import {  AjaxObservable, AjaxCreationMethod  } from './AjaxObservable';\n\nexport const ajax: AjaxCreationMethod = AjaxObservable.create;\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/observable/dom/ajax.ts","import { root } from '../../util/root';\nimport { tryCatch } from '../../util/tryCatch';\nimport { errorObject } from '../../util/errorObject';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { TeardownLogic } from '../../Subscription';\nimport { MapOperator } from '../../operator/map';\n\nexport interface AjaxRequest {\n  url?: string;\n  body?: any;\n  user?: string;\n  async?: boolean;\n  method?: string;\n  headers?: Object;\n  timeout?: number;\n  password?: string;\n  hasContent?: boolean;\n  crossDomain?: boolean;\n  withCredentials?: boolean;\n  createXHR?: () => XMLHttpRequest;\n  progressSubscriber?: Subscriber<any>;\n  responseType?: string;\n}\n\nfunction getCORSRequest(this: AjaxRequest): XMLHttpRequest {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else if (!!root.XDomainRequest) {\n    return new root.XDomainRequest();\n  } else {\n    throw new Error('CORS is not supported by your browser');\n  }\n}\n\nfunction getXMLHttpRequest(): XMLHttpRequest {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else {\n    let progId: string;\n    try {\n      const progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n      for (let i = 0; i < 3; i++) {\n        try {\n          progId = progIds[i];\n          if (new root.ActiveXObject(progId)) {\n            break;\n          }\n        } catch (e) {\n          //suppress exceptions\n        }\n      }\n      return new root.ActiveXObject(progId);\n    } catch (e) {\n      throw new Error('XMLHttpRequest is not supported by your browser');\n    }\n  }\n}\n\nexport interface AjaxCreationMethod {\n  (urlOrRequest: string | AjaxRequest): Observable<AjaxResponse>;\n  get(url: string, headers?: Object): Observable<AjaxResponse>;\n  post(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  put(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  patch(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  delete(url: string, headers?: Object): Observable<AjaxResponse>;\n  getJSON<T>(url: string, headers?: Object): Observable<T>;\n}\n\nexport function ajaxGet(url: string, headers: Object = null) {\n  return new AjaxObservable<AjaxResponse>({ method: 'GET', url, headers });\n};\n\nexport function ajaxPost(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'POST', url, body, headers });\n};\n\nexport function ajaxDelete(url: string, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'DELETE', url, headers });\n};\n\nexport function ajaxPut(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'PUT', url, body, headers });\n};\n\nexport function ajaxPatch(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'PATCH', url, body, headers });\n};\n\nexport function ajaxGetJSON<T>(url: string, headers?: Object): Observable<T> {\n  return new AjaxObservable<AjaxResponse>({ method: 'GET', url, responseType: 'json', headers })\n    .lift<T>(new MapOperator<AjaxResponse, T>((x: AjaxResponse, index: number): T => x.response, null));\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class AjaxObservable<T> extends Observable<T> {\n  /**\n   * Creates an observable for an Ajax request with either a request object with\n   * url, headers, etc or a string for a URL.\n   *\n   * @example\n   * source = Rx.Observable.ajax('/products');\n   * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n   *\n   * @param {string|Object} request Can be one of the following:\n   *   A string of the URL to make the Ajax call.\n   *   An object with the following properties\n   *   - url: URL of the request\n   *   - body: The body of the request\n   *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n   *   - async: Whether the request is async\n   *   - headers: Optional headers\n   *   - crossDomain: true if a cross domain request, else false\n   *   - createXHR: a function to override if you need to use an alternate\n   *   XMLHttpRequest implementation.\n   *   - resultSelector: a function to use to alter the output value type of\n   *   the Observable. Gets {@link AjaxResponse} as an argument.\n   * @return {Observable} An observable sequence containing the XMLHttpRequest.\n   * @static true\n   * @name ajax\n   * @owner Observable\n  */\n  static create: AjaxCreationMethod = (() => {\n    const create: any = (urlOrRequest: string | AjaxRequest) => {\n      return new AjaxObservable(urlOrRequest);\n    };\n\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n\n    return <AjaxCreationMethod>create;\n  })();\n\n  private request: AjaxRequest;\n\n  constructor(urlOrRequest: string | AjaxRequest) {\n    super();\n\n    const request: AjaxRequest = {\n      async: true,\n      createXHR: function(this: AjaxRequest) {\n        return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n      },\n      crossDomain: false,\n      withCredentials: false,\n      headers: {},\n      method: 'GET',\n      responseType: 'json',\n      timeout: 0\n    };\n\n    if (typeof urlOrRequest === 'string') {\n      request.url = urlOrRequest;\n    } else {\n      for (const prop in urlOrRequest) {\n        if (urlOrRequest.hasOwnProperty(prop)) {\n          request[prop] = urlOrRequest[prop];\n        }\n      }\n    }\n\n    this.request = request;\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    return new AjaxSubscriber(subscriber, this.request);\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AjaxSubscriber<T> extends Subscriber<Event> {\n  private xhr: XMLHttpRequest;\n  private done: boolean = false;\n\n  constructor(destination: Subscriber<T>, public request: AjaxRequest) {\n    super(destination);\n\n    const headers = request.headers = request.headers || {};\n\n    // force CORS if requested\n    if (!request.crossDomain && !headers['X-Requested-With']) {\n      headers['X-Requested-With'] = 'XMLHttpRequest';\n    }\n\n    // ensure content type is set\n    if (!('Content-Type' in headers) && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n\n    // properly serialize body\n    request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n\n    this.send();\n  }\n\n  next(e: Event): void {\n    this.done = true;\n    const { xhr, request, destination } = this;\n    const response = new AjaxResponse(e, xhr, request);\n\n    destination.next(response);\n  }\n\n  private send(): XMLHttpRequest {\n    const {\n      request,\n      request: { user, method, url, async, password, headers, body }\n    } = this;\n    const createXHR = request.createXHR;\n    const xhr: XMLHttpRequest = tryCatch(createXHR).call(request);\n\n    if (<any>xhr === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      this.xhr = xhr;\n\n      // set up the events before open XHR\n      // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n      // You need to add the event listeners before calling open() on the request.\n      // Otherwise the progress events will not fire.\n      this.setupEvents(xhr, request);\n      // open XHR\n      let result: any;\n      if (user) {\n        result = tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n      } else {\n        result = tryCatch(xhr.open).call(xhr, method, url, async);\n      }\n\n      if (result === errorObject) {\n        this.error(errorObject.e);\n        return null;\n      }\n\n      // timeout, responseType and withCredentials can be set once the XHR is open\n      xhr.timeout = request.timeout;\n      xhr.responseType = request.responseType;\n\n      if ('withCredentials' in xhr) {\n        xhr.withCredentials = !!request.withCredentials;\n      }\n\n      // set headers\n      this.setHeaders(xhr, headers);\n\n      // finally send the request\n      result = body ? tryCatch(xhr.send).call(xhr, body) : tryCatch(xhr.send).call(xhr);\n      if (result === errorObject) {\n        this.error(errorObject.e);\n        return null;\n      }\n    }\n\n    return xhr;\n  }\n\n  private serializeBody(body: any, contentType?: string) {\n    if (!body || typeof body === 'string') {\n      return body;\n    } else if (root.FormData && body instanceof root.FormData) {\n      return body;\n    }\n\n    if (contentType) {\n      const splitIndex = contentType.indexOf(';');\n      if (splitIndex !== -1) {\n        contentType = contentType.substring(0, splitIndex);\n      }\n    }\n\n    switch (contentType) {\n      case 'application/x-www-form-urlencoded':\n        return Object.keys(body).map(key => `${encodeURI(key)}=${encodeURI(body[key])}`).join('&');\n      case 'application/json':\n        return JSON.stringify(body);\n      default:\n        return body;\n    }\n  }\n\n  private setHeaders(xhr: XMLHttpRequest, headers: Object) {\n    for (let key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  }\n\n  private setupEvents(xhr: XMLHttpRequest, request: AjaxRequest) {\n    const progressSubscriber = request.progressSubscriber;\n\n    function xhrTimeout(this: XMLHttpRequest, e: ProgressEvent) {\n      const {subscriber, progressSubscriber, request } = (<any>xhrTimeout);\n      if (progressSubscriber) {\n        progressSubscriber.error(e);\n      }\n      subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n    };\n    xhr.ontimeout = xhrTimeout;\n    (<any>xhrTimeout).request = request;\n    (<any>xhrTimeout).subscriber = this;\n    (<any>xhrTimeout).progressSubscriber = progressSubscriber;\n    if (xhr.upload && 'withCredentials' in xhr) {\n      if (progressSubscriber) {\n        let xhrProgress: (e: ProgressEvent) => void;\n        xhrProgress = function(e: ProgressEvent) {\n          const { progressSubscriber } = (<any>xhrProgress);\n          progressSubscriber.next(e);\n        };\n        if (root.XDomainRequest) {\n          xhr.onprogress = xhrProgress;\n        } else {\n          xhr.upload.onprogress = xhrProgress;\n        }\n        (<any>xhrProgress).progressSubscriber = progressSubscriber;\n      }\n      let xhrError: (e: ErrorEvent) => void;\n      xhrError = function(this: XMLHttpRequest, e: ErrorEvent) {\n        const { progressSubscriber, subscriber, request } = (<any>xhrError);\n        if (progressSubscriber) {\n          progressSubscriber.error(e);\n        }\n        subscriber.error(new AjaxError('ajax error', this, request));\n      };\n      xhr.onerror = xhrError;\n      (<any>xhrError).request = request;\n      (<any>xhrError).subscriber = this;\n      (<any>xhrError).progressSubscriber = progressSubscriber;\n    }\n\n    function xhrReadyStateChange(this: XMLHttpRequest, e: ProgressEvent) {\n      const { subscriber, progressSubscriber, request } = (<any>xhrReadyStateChange);\n      if (this.readyState === 4) {\n        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n        let status: number = this.status === 1223 ? 204 : this.status;\n        let response: any = (this.responseType === 'text' ?  (\n          this.response || this.responseText) : this.response);\n\n        // fix status code when it is 0 (0 status is undocumented).\n        // Occurs when accessing file resources or on Android 4.1 stock browser\n        // while retrieving files from application cache.\n        if (status === 0) {\n          status = response ? 200 : 0;\n        }\n\n        if (200 <= status && status < 300) {\n          if (progressSubscriber) {\n            progressSubscriber.complete();\n          }\n          subscriber.next(e);\n          subscriber.complete();\n        } else {\n          if (progressSubscriber) {\n            progressSubscriber.error(e);\n          }\n          subscriber.error(new AjaxError('ajax error ' + status, this, request));\n        }\n      }\n    };\n    xhr.onreadystatechange = xhrReadyStateChange;\n    (<any>xhrReadyStateChange).subscriber = this;\n    (<any>xhrReadyStateChange).progressSubscriber = progressSubscriber;\n    (<any>xhrReadyStateChange).request = request;\n  }\n\n  unsubscribe() {\n    const { done, xhr } = this;\n    if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n      xhr.abort();\n    }\n    super.unsubscribe();\n  }\n}\n\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nexport class AjaxResponse {\n  /** @type {number} The HTTP status code */\n  status: number;\n\n  /** @type {string|ArrayBuffer|Document|object|any} The response data */\n  response: any;\n\n  /** @type {string} The raw responseText */\n  responseText: string;\n\n  /** @type {string} The responseType (e.g. 'json', 'arraybuffer', or 'xml') */\n  responseType: string;\n\n  constructor(public originalEvent: Event, public xhr: XMLHttpRequest, public request: AjaxRequest) {\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n\n    switch (this.responseType) {\n      case 'json':\n        if ('response' in xhr) {\n          //IE does not support json as responseType, parse it internally\n          this.response = xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n        } else {\n          this.response = JSON.parse(xhr.responseText || 'null');\n        }\n        break;\n      case 'xml':\n        this.response = xhr.responseXML;\n        break;\n      case 'text':\n      default:\n        this.response = ('response' in xhr) ? xhr.response : xhr.responseText;\n        break;\n    }\n  }\n}\n\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nexport class AjaxError extends Error {\n  /** @type {XMLHttpRequest} The XHR instance associated with the error */\n  xhr: XMLHttpRequest;\n\n  /** @type {AjaxRequest} The AjaxRequest associated with the error */\n  request: AjaxRequest;\n\n  /** @type {number} The HTTP status code */\n  status: number;\n\n  constructor(message: string, xhr: XMLHttpRequest, request: AjaxRequest) {\n    super(message);\n    this.message = message;\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n  }\n}\n\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nexport class AjaxTimeoutError extends AjaxError {\n  constructor(xhr: XMLHttpRequest, request: AjaxRequest) {\n    super('ajax timeout', xhr, request);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/observable/dom/AjaxObservable.ts","import { Observable } from '../../Observable';\nimport { empty as staticEmpty } from '../../observable/empty';\n\nObservable.empty = staticEmpty;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let empty: typeof staticEmpty;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/add/observable/empty.ts","import {  EmptyObservable  } from './EmptyObservable';\n\nexport const empty = EmptyObservable.create;\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/observable/empty.ts","import { Observable } from '../../Observable';\nimport { from as staticFrom } from '../../observable/from';\n\nObservable.from = staticFrom;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let from: typeof staticFrom;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/add/observable/from.ts","import {  FromObservable  } from './FromObservable';\n\nexport const from = FromObservable.create;\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/observable/from.ts","import { isArray } from '../util/isArray';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { PromiseObservable } from './PromiseObservable';\nimport { IteratorObservable } from'./IteratorObservable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { ArrayLikeObservable } from './ArrayLikeObservable';\n\nimport { IScheduler } from '../Scheduler';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObserveOnSubscriber } from '../operator/observeOn';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromObservable<T> extends Observable<T> {\n  constructor(private ish: ObservableInput<T>, private scheduler?: IScheduler) {\n    super(null);\n  }\n\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\n  static create<T, R>(ish: ArrayLike<T>, scheduler?: IScheduler): Observable<R>;\n\n  /**\n   * Creates an Observable from an Array, an array-like object, a Promise, an\n   * iterable object, or an Observable-like object.\n   *\n   * <span class=\"informal\">Converts almost anything to an Observable.</span>\n   *\n   * <img src=\"./img/from.png\" width=\"100%\">\n   *\n   * Convert various other objects and data types into Observables. `from`\n   * converts a Promise or an array-like or an\n   * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n   * object into an Observable that emits the items in that promise or array or\n   * iterable. A String, in this context, is treated as an array of characters.\n   * Observable-like objects (contains a function named with the ES2015 Symbol\n   * for Observable) can also be converted through this operator.\n   *\n   * @example <caption>Converts an array to an Observable</caption>\n   * var array = [10, 20, 30];\n   * var result = Rx.Observable.from(array);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 10 20 30\n   *\n   * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n   * function* generateDoubles(seed) {\n   *   var i = seed;\n   *   while (true) {\n   *     yield i;\n   *     i = 2 * i; // double it\n   *   }\n   * }\n   *\n   * var iterator = generateDoubles(3);\n   * var result = Rx.Observable.from(iterator).take(10);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 3 6 12 24 48 96 192 384 768 1536\n   *\n   * @see {@link create}\n   * @see {@link fromEvent}\n   * @see {@link fromEventPattern}\n   * @see {@link fromPromise}\n   *\n   * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n   * Observable-like, an Array, an iterable or an array-like object to be\n   * converted.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * emissions of values.\n   * @return {Observable<T>} The Observable whose values are originally from the\n   * input object that was converted.\n   * @static true\n   * @name from\n   * @owner Observable\n   */\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T> {\n    if (ish != null) {\n      if (typeof ish[Symbol_observable] === 'function') {\n        if (ish instanceof Observable && !scheduler) {\n          return ish;\n        }\n        return new FromObservable<T>(ish, scheduler);\n      } else if (isArray(ish)) {\n        return new ArrayObservable<T>(ish, scheduler);\n      } else if (isPromise(ish)) {\n        return new PromiseObservable<T>(ish, scheduler);\n      } else if (typeof ish[Symbol_iterator] === 'function' || typeof ish === 'string') {\n        return new IteratorObservable<T>(ish, scheduler);\n      } else if (isArrayLike(ish)) {\n        return new ArrayLikeObservable(ish, scheduler);\n      }\n    }\n\n    throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    const ish = this.ish;\n    const scheduler = this.scheduler;\n    if (scheduler == null) {\n      return ish[Symbol_observable]().subscribe(subscriber);\n    } else {\n      return ish[Symbol_observable]().subscribe(new ObserveOnSubscriber(subscriber, scheduler, 0));\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/observable/FromObservable.ts","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class PromiseObservable<T> extends Observable<T> {\n\n  public value: T;\n\n  /**\n   * Converts a Promise to an Observable.\n   *\n   * <span class=\"informal\">Returns an Observable that just emits the Promise's\n   * resolved value, then completes.</span>\n   *\n   * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n   * Observable. If the Promise resolves with a value, the output Observable\n   * emits that resolved value as a `next`, and then completes. If the Promise\n   * is rejected, then the output Observable emits the corresponding Error.\n   *\n   * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n   * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   *\n   * @param {PromiseLike<T>} promise The promise to be converted.\n   * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n   * the delivery of the resolved value (or the rejection).\n   * @return {Observable<T>} An Observable which wraps the Promise.\n   * @static true\n   * @name fromPromise\n   * @owner Observable\n   */\n  static create<T>(promise: PromiseLike<T>, scheduler?: IScheduler): Observable<T> {\n    return new PromiseObservable(promise, scheduler);\n  }\n\n  constructor(private promise: PromiseLike<T>, private scheduler?: IScheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const promise = this.promise;\n    const scheduler = this.scheduler;\n\n    if (scheduler == null) {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          subscriber.next(this.value);\n          subscriber.complete();\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.next(value);\n              subscriber.complete();\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.error(err);\n            }\n          }\n        )\n        .then(null, err => {\n          // escape the promise trap, throw unhandled errors\n          root.setTimeout(() => { throw err; });\n        });\n      }\n    } else {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber });\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchNext, 0, { value, subscriber }));\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchError, 0, { err, subscriber }));\n            }\n          })\n          .then(null, (err) => {\n            // escape the promise trap, throw unhandled errors\n            root.setTimeout(() => { throw err; });\n          });\n      }\n    }\n  }\n}\n\ninterface DispatchNextArg<T> {\n  subscriber: Subscriber<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.next(value);\n    subscriber.complete();\n  }\n}\n\ninterface DispatchErrorArg<T> {\n  subscriber: Subscriber<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.error(err);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/observable/PromiseObservable.ts","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IteratorObservable<T> extends Observable<T> {\n  private iterator: any;\n\n  static create<T>(iterator: any, scheduler?: IScheduler): IteratorObservable<T> {\n    return new IteratorObservable(iterator, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, hasError, iterator, subscriber } = state;\n\n    if (hasError) {\n      subscriber.error(state.error);\n      return;\n    }\n\n    let result = iterator.next();\n    if (result.done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(result.value);\n    state.index = index + 1;\n\n    if (subscriber.closed) {\n      if (typeof iterator.return === 'function') {\n        iterator.return();\n      }\n      return;\n    }\n\n    (<any> this).schedule(state);\n  }\n\n  constructor(iterator: any, private scheduler?: IScheduler) {\n    super();\n\n    if (iterator == null) {\n      throw new Error('iterator cannot be null.');\n    }\n\n    this.iterator = getIterator(iterator);\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    let index = 0;\n    const { iterator, scheduler } = this;\n\n    if (scheduler) {\n      return scheduler.schedule(IteratorObservable.dispatch, 0, {\n        index, iterator, subscriber\n      });\n    } else {\n      do {\n        let result = iterator.next();\n        if (result.done) {\n          subscriber.complete();\n          break;\n        } else {\n          subscriber.next(result.value);\n        }\n        if (subscriber.closed) {\n          if (typeof iterator.return === 'function') {\n            iterator.return();\n          }\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n\nclass StringIterator {\n  constructor(private str: string,\n              private idx: number = 0,\n              private len: number = str.length) {\n  }\n  [Symbol_iterator]() { return (this); }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.str.charAt(this.idx++)\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nclass ArrayIterator {\n  constructor(private arr: Array<any>,\n              private idx: number = 0,\n              private len: number = toLength(arr)) {\n  }\n  [Symbol_iterator]() { return this; }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.arr[this.idx++]\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nfunction getIterator(obj: any) {\n  const i = obj[Symbol_iterator];\n  if (!i && typeof obj === 'string') {\n    return new StringIterator(obj);\n  }\n  if (!i && obj.length !== undefined) {\n    return new ArrayIterator(obj);\n  }\n  if (!i) {\n    throw new TypeError('object is not iterable');\n  }\n  return obj[Symbol_iterator]();\n}\n\nconst maxSafeInteger = Math.pow(2, 53) - 1;\n\nfunction toLength(o: any) {\n  let len = +o.length;\n  if (isNaN(len)) {\n      return 0;\n  }\n  if (len === 0 || !numberIsFinite(len)) {\n      return len;\n  }\n  len = sign(len) * Math.floor(Math.abs(len));\n  if (len <= 0) {\n      return 0;\n  }\n  if (len > maxSafeInteger) {\n      return maxSafeInteger;\n  }\n  return len;\n}\n\nfunction numberIsFinite(value: any) {\n  return typeof value === 'number' && root.isFinite(value);\n}\n\nfunction sign(value: any) {\n  let valueAsNumber = +value;\n  if (valueAsNumber === 0) {\n    return valueAsNumber;\n  }\n  if (isNaN(valueAsNumber)) {\n    return valueAsNumber;\n  }\n  return valueAsNumber < 0 ? -1 : 1;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/observable/IteratorObservable.ts","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayLikeObservable<T> extends Observable<T> {\n\n  static create<T>(arrayLike: ArrayLike<T>, scheduler?: IScheduler): Observable<T> {\n    const length = arrayLike.length;\n    if (length === 0) {\n      return new EmptyObservable<T>();\n    } else if (length === 1) {\n      return new ScalarObservable<T>(<any>arrayLike[0], scheduler);\n    } else {\n      return new ArrayLikeObservable(arrayLike, scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n    const { arrayLike, index, length, subscriber } = state;\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    if (index >= length) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(arrayLike[index]);\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  private value: any;\n\n  constructor(private arrayLike: ArrayLike<T>, private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && arrayLike.length === 1) {\n      this._isScalar = true;\n      this.value = arrayLike[0];\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const { arrayLike, scheduler } = this;\n    const length = arrayLike.length;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n        arrayLike, index, length, subscriber\n      });\n    } else {\n      for (let i = 0; i < length && !subscriber.closed; i++) {\n        subscriber.next(arrayLike[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/observable/ArrayLikeObservable.ts","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { TeardownLogic } from '../Subscription';\nimport { Action } from '../scheduler/Action';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(this: Observable<T>, scheduler: IScheduler, delay: number = 0): Observable<T> {\n  return this.lift(new ObserveOnOperator(scheduler, delay));\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: IScheduler, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  static dispatch(this: Action<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: IScheduler,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    this.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/operator/observeOn.ts","import { Observable } from '../../Observable';\nimport { interval as staticInterval } from '../../observable/interval';\n\nObservable.interval = staticInterval;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let interval: typeof staticInterval;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/add/observable/interval.ts","import {  IntervalObservable  } from './IntervalObservable';\n\nexport const interval = IntervalObservable.create;\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/observable/interval.ts","import { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IntervalObservable extends Observable<number> {\n  /**\n   * Creates an Observable that emits sequential numbers every specified\n   * interval of time, on a specified IScheduler.\n   *\n   * <span class=\"informal\">Emits incremental numbers periodically in time.\n   * </span>\n   *\n   * <img src=\"./img/interval.png\" width=\"100%\">\n   *\n   * `interval` returns an Observable that emits an infinite sequence of\n   * ascending integers, with a constant interval of time of your choosing\n   * between those emissions. The first emission is not sent immediately, but\n   * only after the first period has passed. By default, this operator uses the\n   * `async` IScheduler to provide a notion of time, but you may pass any\n   * IScheduler to it.\n   *\n   * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n   * var numbers = Rx.Observable.interval(1000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link timer}\n   * @see {@link delay}\n   *\n   * @param {number} [period=0] The interval size in milliseconds (by default)\n   * or the time unit determined by the scheduler's clock.\n   * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n   * the emission of values, and providing a notion of \"time\".\n   * @return {Observable} An Observable that emits a sequential number each time\n   * interval.\n   * @static true\n   * @name interval\n   * @owner Observable\n   */\n  static create(period: number = 0,\n                scheduler: IScheduler = async): Observable<number> {\n    return new IntervalObservable(period, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { index, subscriber, period } = state;\n\n    subscriber.next(index);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index += 1;\n\n    (<any> this).schedule(state, period);\n  }\n\n  constructor(private period: number = 0,\n              private scheduler: IScheduler = async) {\n    super();\n    if (!isNumeric(period) || period < 0) {\n      this.period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = async;\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<number>) {\n    const index = 0;\n    const period = this.period;\n    const scheduler = this.scheduler;\n\n    subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n      index, subscriber, period\n    }));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/observable/IntervalObservable.ts","import { isArray } from '../util/isArray';\n\nexport function isNumeric(val: any): val is number {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/util/isNumeric.ts","import { Observable } from '../../Observable';\nimport { of as staticOf } from '../../observable/of';\n\nObservable.of = staticOf;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let of: typeof staticOf; //formOf an iceberg!\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/add/observable/of.ts","import {  ArrayObservable  } from './ArrayObservable';\n\nexport const of = ArrayObservable.of;\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/observable/of.ts","import { Observable } from '../../Observable';\nimport { _throw } from '../../observable/throw';\n\nObservable.throw = _throw;\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/add/observable/throw.ts","import {  ErrorObservable  } from './ErrorObservable';\n\nexport const _throw = ErrorObservable.create;\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/observable/throw.ts","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg {\n  error: any;\n  subscriber: any;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ErrorObservable extends Observable<any> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits an error notification.\n   *\n   * <span class=\"informal\">Just emits 'error', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/throw.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the error notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then emit an error.</caption>\n   * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x === 13 ?\n   *     Rx.Observable.throw('Thirteens are bad') :\n   *     Rx.Observable.of('a', 'b', 'c')\n   * );\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link of}\n   *\n   * @param {any} error The particular Error to pass to the error notification.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the error notification.\n   * @return {Observable} An error Observable: emits only the error notification\n   * using the given error argument.\n   * @static true\n   * @name throw\n   * @owner Observable\n   */\n  static create(error: any, scheduler?: IScheduler): ErrorObservable {\n    return new ErrorObservable(error, scheduler);\n  }\n\n  static dispatch(arg: DispatchArg) {\n    const { error, subscriber } = arg;\n    subscriber.error(error);\n  }\n\n  constructor(public error: any, private scheduler?: IScheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: any): TeardownLogic {\n    const error = this.error;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ErrorObservable.dispatch, 0, {\n        error, subscriber\n      });\n    } else {\n      subscriber.error(error);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/rxjs/src/observable/ErrorObservable.ts"],"sourceRoot":""}